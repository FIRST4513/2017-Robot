// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "TestAutoCmdGrp.h"
#include "AutoDriveFwdCmd.h"
#include "DelayCmd.h"
#include "VisionUpdate.h"
#include "GearPushCmd.h"
#include "DriveSwingTurnCmd.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

TestAutoCmdGrp::TestAutoCmdGrp() {
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
     // Add Commands here:
    // e.g. AddSequential(new Command1());
    //      AddSequential(new Command2());
    // these will run in order.

    // To run multiple commands at the same time,
    // use AddParallel()
    // e.g. AddParallel(new Command1());
    //      AddSequential(new Command2());
    // Command1 and Command2 will run in parallel.

    // A command group will require all of the subsystems that each member
    // would require.
    // e.g. if Command1 requires chassis, and Command2 requires arm,
    // a CommandGroup containing them would require both the chassis and the
    // arm.
              // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
                      // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
	// 							   (tgtDist, accelPwr, cruisePwr, decelPwr, slowPwr, stopPwr, accelDist, decelDist, slowSpeed, stopDist, TO, Mode)
	//AddSequential(new AutoDriveFwdCmd(89.75,     0.25,      0.25,      -0.0,     0.05,    -0.20,      3,       3,         0.0,       0.2,   5,   0));

	// this will drive forward with vision to tgt heading indicated by vision subsystem
	//							   (tgtDist, accelPwr, cruisePwr, decelPwr, slowPwr, stopPwr, accelDist, decelDist, slowSpeed, stopDist, TO, Mode)

	std::cout << "Starting test auto CmdGrp" << std::endl;
	// -------- Delay 2/10'second for vision to get image ------------
	AddSequential(new DelayCmd(0.2));

	// -------- Update Vision Data ------------
	AddSequential(new VisionUpdate());

	// -------- Perform Swing turn fir sirst shift segment ------------
	//                DriveSwingTurnCmd(   LftSpeed, RtSpeed,  Radius, Timeout, Mode, Angle) - [ Mode 0=angle, 1= shiftHdg1, 2=shiftHdg2,
	AddSequential(new DriveSwingTurnCmd(     0.25,      0.25,    0.0,     8,       1,   0));

	// -------- Perform Swing turn fir sirst shift segment ------------
	//                DriveSwingTurnCmd(   LftSpeed, RtSpeed,  Radius, Timeout, Mode, Angle) - [ Mode 0=angle, 1= shiftHdg1, 2=shiftHdg2,
	AddSequential(new DriveSwingTurnCmd(     0.25,      0.25,    0.0,     8,       2,   0));

	// -------- Delay 2/10'second for vision to get image ------------
	AddSequential(new DelayCmd(0.2));

	// -------- Update Vision Data ------------
	AddSequential(new VisionUpdate());


	// -------- Perform Drive forward to Post ------------
	// 							   (tgtDist, accelPwr, cruisePwr, decelPwr, slowPwr, stopPwr, accelDist, decelDist, slowSpeed, stopDist, TO, Mode)
	AddSequential(new AutoDriveFwdCmd(30.0,     0.25,      0.25,      -0.0,     0.05,    -0.20,      3,       3,         0.0,       0.2,   8,   1));

	// -------- DPush the gear onto the post ------------
	AddSequential(new GearPushCmd(1));
	AddSequential(new GearPushCmd(1));
	std::cout << "End test auto CmdGrp" << std::endl;
}
